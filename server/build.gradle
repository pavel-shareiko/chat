plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'by.shareiko'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-messaging'
    implementation 'org.springframework.security:spring-security-data'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    if (project.hasProperty("prod")) {
        runtimeOnly 'org.postgresql:postgresql'
    } else {
        runtimeOnly 'com.h2database:h2'
    }
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
}

var profile = project.hasProperty('prod') ? 'prod' : 'dev'
println "Using profile: ${profile}"

tasks.bootRun {
    args("--spring.profiles.active=${profile}")
}

tasks.named('test') {
    useJUnitPlatform()
}
